Создание массивов (списков)

Массив — это структура данных, которая хранит набор элементов одного типа, расположенных подряд в памяти.
Каждый элемент массива имеет свой индекс, по которому к нему можно быстро обратиться.
Массив удобен, когда нужно хранить и обрабатывать фиксированное количество однотипных данных — например, оценки студентов, координаты точек, числа в вычислениях и т. д.

Основное назначение массива:
хранение упорядоченных данных;
быстрый доступ к элементам по индексу;
основа для построения более сложных структур (списки, таблицы, матрицы и т. п.)

Размер:
В C++ размер массива задаётся при объявлении и не может изменяться во время работы программы. Чтобы изменить размер, нужно создать новый массив и перенести в него данные.
В Java ситуация похожая: длина массива фиксируется при создании. Для изменения также требуется новый массив.
В Python списки динамические — их можно свободно увеличивать или уменьшать, добавляя или удаляя элементы без ручного управления памятью.

Типы данных:
В C++ и Java массивы хранят элементы одного заранее определённого типа.
В Python список может содержать значения разных типов — числа, строки, логические значения и т. д.

Встроенные операции:
В Python есть встроенные методы для добавления, удаления, сортировки и поиска элементов.
В C++ такие операции реализуются вручную или с помощью стандартных библиотек (например, <algorithm>).
В Java для работы с массивами применяются утилитные классы из пакета java.util, например Arrays.

Создание стеков

Стек — это структура данных, работающая по принципу LIFO (Last In — First Out, «последним вошёл — первым вышел»).
Элементы добавляются и удаляются только с одного конца — вершины стека.
Последний добавленный элемент извлекается первым.

Основное назначение стека:
хранение временных данных (например, при рекурсии);
реализация откатов (undo), возврата назад в программах;
обработка выражений и вызовов функций;
управление порядком выполнения операций

Реализация:
В C++ стек часто реализуют на основе массива или контейнера std::stack. Если используется обычный массив, размер нужно задавать заранее.
В Java есть готовый класс Stack, работающий по принципу LIFO (последний вошёл — первый вышел). Также можно создать стек самостоятельно на базе списка.
В Python стек обычно делают с помощью списка (list) или модуля collections.deque, который эффективнее при частых добавлениях и удалениях.

В java и C++ для добавления элемента используется метод push,а в Python - append.Для удаления используется метод pop. Память освобождается автоматически, без участия человека.
